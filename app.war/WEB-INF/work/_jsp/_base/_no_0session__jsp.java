/*
 * JSP generated by Resin-4.0.28 (built Fri, 08 Jun 2012 05:08:34 PDT)
 */

package _jsp._base;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import com.cni.fw.ff.dto.*;
import com.cni.fw.ff.dto.entity.*;
import com.cni.fw.ff.util.maker.*;
import com.cni.fw.ff.dto.support.*;
import com.cni.fw.ff.util.*;
import com.cni.fw.id.*;
import com.cni.fw.web.util.*;
import com.cni.fw.web.session.so.CommonSession;
import com.cni.fw.meta.util.CmdMetaUtil;
import com.cni.fw.meta.cmd.base.CommandMeta;
import xlib.cmc.GridData;
import xlib.cmc.OperateGridData;

public class _no_0session__jsp extends com.cni.fw.arch.ArchJsp implements com.caucho.jsp.CauchoPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html; charset=UTF-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
    CauseDTO input = getCauseDTO(request);
    EffectDTO output = getEffectDTO(request);
    CommonSession cs = null;
    if (input != null) {
		cs = input.getCommonSession();
    }
    String ctxPath = request.getContextPath();

    out.write(_jsp_string1, 0, _jsp_string1.length);
    
	if (cs != null) {
        CommandMeta cmdMeta = input.getCommand();
        String cmdStr = cmdMeta.getCommand();
        //\uc544\ub798\ub294 \uac01\uc885 CMD \uad00\ub828 \uba54\ud0c0\ub97c \ub4dd\ud558\uae30 \uc704\ud55c \uc608\uc2dc.
        //debug("\ud604\uc7ac\uc9c4\ud589\uc911\uc778CMD:"+cmdStr);  // \ud604\uc7ac \uc9c4\ud589\uc911\uc778 CMD\ub294 \ucd5c\ucd08\uc5d0 \uc694\uccad\ud55c CMD\uc640 \ub2e4\ub97c\uc218\ub3c4 \uc788\ub2e4 (CHAINED \ub4f1\uc758 \uc0ac\uc720\ub85c \uc778\ud574..)
        //debug("UC-ID:"+StrUtil.leftGetOff(cmdStr, ".", false));
        //debug("EV-ID:"+StrUtil.rightGetOff(cmdStr, ".", false));
        //debug("\uc785\ub825\ucc44\ub110\uc720\ud615(\uc9c4\ud589\uc911):"+cmdMeta.getIpType());
        //debug("\ucd9c\ub825\ucc44\ub110\uc720\ud615(\uc9c4\ud589\uc911):"+cmdMeta.getOpType());
        //debug("\ud604\uc7ac\uc9c4\ud589\uc911\uc778\uc694\uccad\uc5d0\ub300\ud55c\ucd5c\ucd08CMD:"+cs.getFirstCommand()); // CHAINED \ub4f1\uc73c\ub85c \uc5f0\uc1c4\ub41c \uc774\ubca4\ud2b8\uc758 \uacbd\uc6b0 \ucd5c\ucd08CMD\ub97c \ucc3e\uc73c\ub824\uba74 \uc774\uc640 \uac19\uc774 \ud574\uc57c\ud55c\ub2e4.
        //debug("\uc785\ub825\ucc44\ub110\uc720\ud615(\ucd5c\ucd08):"+CmdMetaUtil.getCommand(cs.getFirstCommand()).getIpType()); 
        //debug("\ucd9c\ub825\ucc44\ub110\uc720\ud615(\ucd5c\uc885):"+CmdMetaUtil.findLastOpType(cmdStr)); // CHAINED \ub4f1\uc73c\ub85c \uc5f0\uc1c4\ub41c \uc774\ubca4\ud2b8\uc758 \uacbd\uc6b0 \ucd5c\uc885 CMD\uc758 \ucd9c\ub825\ucc44\ub110\uc720\ud615\uc744 \ucc3e\uc73c\ub824\uba74 \uc774\uc640 \uac19\uc774 \ud574\uc57c\ud55c\ub2e4.
  
        String UC_ID = StrUtil.leftGetOff(cmdStr, ".", false);
        String lastOpType = CmdMetaUtil.findLastOpType(cs.getFirstCommand());
		
		// \ucd5c\uc885 \ucd9c\ub825 \ucc44\ub110\uc758 \uc885\ub958\uac00 XML \uc778 \uc694\uccad\uc5d0 \ub300\ud55c \uc138\uc158\ud0c0\uc784\uc544\uc6c3 \ucc98\ub9ac
		if (lastOpType.equals("XML")) {
	    	String msg = "\uc138\uc158\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.";
	        String code = "NOSESSION";

	        response.setContentType("text/xml");
	        response.setHeader("Cache-Control", "no-cache");
	        response.setHeader("pragma","no-cache");
	        out.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
	        out.println("<EffectDTO>");
	        out.println("<Summary>");
	        out.println("<Success>false</Success>");
	        out.println("<Code>" + code + "</Code>");
	        out.println("<Message>" + msg + "</Message>");
	        out.println("<TX>" + output.getTxId() +"</TX>");
	        out.println("</Summary>");
	        out.println("</EffectDTO>");
	            
	        return; 
	    // \ucd5c\uc885 \ucd9c\ub825 \ucc44\ub110\uc758 \uc885\ub958\uac00 WISE \uc778 \uc694\uccad\uc5d0 \ub300\ud55c \uc138\uc158\ud0c0\uc784\uc544\uc6c3 \ucc98\ub9ac
		} else if (lastOpType.equals("WISE")) {
			
			response.setContentType("text/html;charset=UTF-8");
			GridData gdObj = new GridData();
			gdObj.setMessage("\uc138\uc158\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.");
			gdObj.setStatus("NOSESSION");
			try {
				OperateGridData.write(gdObj, response.getWriter());
			} catch (Exception e) {
				e.printStackTrace();
			}
			return;
		}
	}

    out.write(_jsp_string2, 0, _jsp_string2.length);
    out.print(( request.getContextPath() ));
    out.write(_jsp_string3, 0, _jsp_string3.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -2856366979881442457L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public com.caucho.server.webapp.WebApp _caucho_getApplication()
  {
     return (com.caucho.server.webapp.WebApp) getServletConfig().getServletContext();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("base/no_session.jsp"), -3554256960428458760L, false);
    _caucho_depends.add(depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("base/include/ArchJsp.jspf"), -4082645001948788182L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string3;
  private final static char []_jsp_string0;
  static {
    _jsp_string1 = "\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string2 = "\r\n<link href=\"".toCharArray();
    _jsp_string3 = "/base/css/cni.css\" rel=\"stylesheet\" type=\"text/css\">\r\n<br>\r\n<br>\r\n<b>\ub85c\uadf8\uc778\ud55c \uc0c1\ud0dc\uac00 \uc544\ub2c8\uba74 \uc218\ud589\ud560 \uc218 \uc5c6\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4. </b>\r\n<br>\r\n<br>\r\n<font color=\"red\">\ub85c\uadf8\uc778\uc744 \uc218\ud589\ud558\uc2ed\uc2dc\uc694.</font>\r\n".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
  }
}
